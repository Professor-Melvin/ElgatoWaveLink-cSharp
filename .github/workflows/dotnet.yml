name: .NET

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  setup:
    name: Setup
    env:
        BUILD_CONFIG: 'Release'
        SOLUTION: 'ElgatoWaveSDK.sln'    
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        Import-Module .\build\GetBuildVersion.psm1
        Write-Host $Env:GITHUB_REF
        $version = GetBuildVersion -VersionString $Env:GITHUB_REF
        echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
    - name: Restore dependencies
      run: dotnet restore   

  build:
    name: Build
    needs: setup
    runs-on: windows-latest
    steps:
    - name: Build
      run: dotnet build $SOLUTION --configuration $BUILD_CONFIG -p:Version=$BUILD_VERSION --no-restore
      
  test:
    name: Test
    needs: build
    runs-on: windows-latest
    steps:
    - name: Test
      run: dotnet test /p:Configuration=$env:BUILD_CONFIG --no-restore --no-build --verbosity normal   
      
  analyze:
    name: Analyze
    needs: test
    runs-on: windows-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
    - name: Autobuild
      uses: github/codeql-action/autobuild@v
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
  publish:
    name: Publish
    needs: analyze
    runs-on: windows-latest
    steps:
    - name: Publish
      if: startsWith(github.ref, 'refs/heads/release')
      run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}
